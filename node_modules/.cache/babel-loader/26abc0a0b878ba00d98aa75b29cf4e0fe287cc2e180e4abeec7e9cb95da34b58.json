{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zied\\\\OneDrive - Ministere de l'Enseignement Superieur et de la Recherche Scientifique\\\\Desktop\\\\PFE\\\\conteneur_connect\\xE9_mobile\\\\conteneur_connect-\\\\reset-password-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport Form from \"./components/Form\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport authService from \"./services/authService\";\n// import { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    token,\n    id\n  } = useParams();\n  // const history = useHistory();\n  const {\n    addToast\n  } = useToasts();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const onSubmit = async data => {\n    setIsLoading(true);\n    try {\n      await authService.resetPassword(id, token, data.password);\n      addToast('Password reset successfully!', {\n        appearance: 'success'\n      });\n      // history.push('/login');\n    } catch (error) {\n      addToast(error.message, {\n        appearance: 'error'\n      });\n    }\n    setIsLoading(false);\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n    //   <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n    //     <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n    //       Reset your password\n    //     </h2>\n    //   </div>\n    //   <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n    //     <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n    //       <form className=\"space-y-6\" onSubmit={handleSubmit(onSubmit)}>\n    //         <input type=\"hidden\" name=\"id\" value={id} ref={register} />\n    //         <input type=\"hidden\" name=\"token\" value={token} ref={register} />\n    //         <div>\n    //           <label\n    //             htmlFor=\"password\"\n    //             className=\"block text-sm font-medium text-gray-700\"\n    //           >\n    //             New Password\n    //           </label>\n    //           <div className=\"mt-1\">\n    //             <input\n    //               id=\"password\"\n    //               name=\"password\"\n    //               type=\"password\"\n    //               autoComplete=\"new-password\"\n    //               ref={register({\n    //                 required: 'Please enter a password',\n    //                 minLength: {\n    //                   value: 8,\n    //                   message: 'Your password must be at least 8 characters long',\n    //                 },\n    //               })}\n    //               className={`${\n    //                 errors.password\n    //                   ? \"border-red-300 focus:ring-red-500 focus:border-red-500\"\n    //                   : \"border-gray-300 focus:ring-primary-500 focus:border-primary-500\"\n    //               } rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 sm:text-sm w-full`}\n    //             />\n    //             {errors.password && (\n    //               <span className=\"text-red-600 text-xs mt-1\">\n    //                 {errors.password.message}\n    //               </span>\n    //             )}\n    //           </div>\n    //         </div>\n    //         <div>\n    //           <label\n    //             htmlFor=\"confirmPassword\"\n    //             className=\"block text-sm font-medium text-gray-700\"\n    //           >\n    //             Confirm Password\n    //           </label>\n    //           <div className=\"mt-1\">\n    //             <input\n    //               id=\"confirmPassword\"\n    //               name=\"confirmPassword\"\n    //               type=\"password\"\n    //               autoComplete=\"new-password\"\n    //               ref={register({\n    //                 validate: (value) =>\n    //                   value === watch('password') || \"The passwords don't match\",\n    //               })}\n    //               className={`${\n    //                 errors.confirmPassword\n    //                   ? \"border-red-300 focus:ring-red-500 focus:border-red-500\"\n    //                   : \"border-gray-300 focus:ring-primary-500 focus:border-primary-500\"\n    //               } rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 sm:text-sm w-full`}\n    //               />\n    //               {errors.confirmPassword && (\n    //                 <span className=\"text-red-600 text-xs mt-1\">\n    //                   {errors.confirmPassword.message}\n    //                 </span>\n    //               )}\n    //             </div>\n    //           </div>\n    //           <div>\n    //             <button\n    //               type=\"submit\"\n    //               disabled={isLoading}\n    //               className={`${\n    //                 isLoading\n    //                   ? \"bg-gray-400 cursor-not-allowed\"\n    //                   : \"bg-primary-500 hover:bg-primary-600\"\n    //               } w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500`}\n    //             >\n    //               {isLoading ? 'Loading...' : 'Reset password'}\n    //             </button>\n    //           </div>\n    //         </form>\n    //       </div>\n    //     </div>\n    //   </div>\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"xrs1iKPskHAUjv82TrUHCjBMaVo=\", false, function () {\n  return [useParams, useToasts, useForm];\n});\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useParams","Form","useToasts","useForm","useState","authService","App","token","id","addToast","register","handleSubmit","watch","errors","isLoading","setIsLoading","onSubmit","data","resetPassword","password","appearance","error","message"],"sources":["C:/Users/zied/OneDrive - Ministere de l'Enseignement Superieur et de la Recherche Scientifique/Desktop/PFE/conteneur_connectÃ©_mobile/conteneur_connect-/reset-password-client/src/App.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport Form from \"./components/Form\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport authService from \"./services/authService\";\n// import { useHistory } from 'react-router';\n\n\n\nfunction App() {\n  const { token, id } = useParams();\n  // const history = useHistory();\n  const { addToast } = useToasts();\n  const { register, handleSubmit, watch, errors } = useForm();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onSubmit = async (data) => {\n    setIsLoading(true);\n    try {\n      await authService.resetPassword(id, token, data.password);\n      addToast('Password reset successfully!', { appearance: 'success' });\n      // history.push('/login');\n    } catch (error) {\n      addToast(error.message, { appearance: 'error' });\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    // <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n    //   <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n    //     <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n    //       Reset your password\n    //     </h2>\n    //   </div>\n\n    //   <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n    //     <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n    //       <form className=\"space-y-6\" onSubmit={handleSubmit(onSubmit)}>\n    //         <input type=\"hidden\" name=\"id\" value={id} ref={register} />\n    //         <input type=\"hidden\" name=\"token\" value={token} ref={register} />\n\n    //         <div>\n    //           <label\n    //             htmlFor=\"password\"\n    //             className=\"block text-sm font-medium text-gray-700\"\n    //           >\n    //             New Password\n    //           </label>\n    //           <div className=\"mt-1\">\n    //             <input\n    //               id=\"password\"\n    //               name=\"password\"\n    //               type=\"password\"\n    //               autoComplete=\"new-password\"\n    //               ref={register({\n    //                 required: 'Please enter a password',\n    //                 minLength: {\n    //                   value: 8,\n    //                   message: 'Your password must be at least 8 characters long',\n    //                 },\n    //               })}\n    //               className={`${\n    //                 errors.password\n    //                   ? \"border-red-300 focus:ring-red-500 focus:border-red-500\"\n    //                   : \"border-gray-300 focus:ring-primary-500 focus:border-primary-500\"\n    //               } rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 sm:text-sm w-full`}\n    //             />\n    //             {errors.password && (\n    //               <span className=\"text-red-600 text-xs mt-1\">\n    //                 {errors.password.message}\n    //               </span>\n    //             )}\n    //           </div>\n    //         </div>\n\n    //         <div>\n    //           <label\n    //             htmlFor=\"confirmPassword\"\n    //             className=\"block text-sm font-medium text-gray-700\"\n    //           >\n    //             Confirm Password\n    //           </label>\n    //           <div className=\"mt-1\">\n    //             <input\n    //               id=\"confirmPassword\"\n    //               name=\"confirmPassword\"\n    //               type=\"password\"\n    //               autoComplete=\"new-password\"\n    //               ref={register({\n    //                 validate: (value) =>\n    //                   value === watch('password') || \"The passwords don't match\",\n    //               })}\n    //               className={`${\n    //                 errors.confirmPassword\n    //                   ? \"border-red-300 focus:ring-red-500 focus:border-red-500\"\n    //                   : \"border-gray-300 focus:ring-primary-500 focus:border-primary-500\"\n    //               } rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 sm:text-sm w-full`}\n    //               />\n    //               {errors.confirmPassword && (\n    //                 <span className=\"text-red-600 text-xs mt-1\">\n    //                   {errors.confirmPassword.message}\n    //                 </span>\n    //               )}\n    //             </div>\n    //           </div>\n  \n    //           <div>\n    //             <button\n    //               type=\"submit\"\n    //               disabled={isLoading}\n    //               className={`${\n    //                 isLoading\n    //                   ? \"bg-gray-400 cursor-not-allowed\"\n    //                   : \"bg-primary-500 hover:bg-primary-600\"\n    //               } w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500`}\n    //             >\n    //               {isLoading ? 'Loading...' : 'Reset password'}\n    //             </button>\n    //           </div>\n    //         </form>\n    //       </div>\n    //     </div>\n    //   </div>\n    <div>\n      <h1>hello</h1>\n    </div>\n    );\n  };\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,wBAAwB;AAChD;AAAA;AAIA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM;IAAEC,KAAK;IAAEC;EAAG,CAAC,GAAGR,SAAS,EAAE;EACjC;EACA,MAAM;IAAES;EAAS,CAAC,GAAGP,SAAS,EAAE;EAChC,MAAM;IAAEQ,QAAQ;IAAEC,YAAY;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGV,OAAO,EAAE;EAC3D,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,QAAQ,GAAG,MAAOC,IAAI,IAAK;IAC/BF,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMV,WAAW,CAACa,aAAa,CAACV,EAAE,EAAED,KAAK,EAAEU,IAAI,CAACE,QAAQ,CAAC;MACzDV,QAAQ,CAAC,8BAA8B,EAAE;QAAEW,UAAU,EAAE;MAAU,CAAC,CAAC;MACnE;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,QAAQ,CAACY,KAAK,CAACC,OAAO,EAAE;QAAEF,UAAU,EAAE;MAAQ,CAAC,CAAC;IAClD;IACAL,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAAA,uBACE;QAAA,UAAI;MAAK;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA;EACV;AAER;AAAC,GAvHMT,GAAG;EAAA,QACYN,SAAS,EAEVE,SAAS,EACoBC,OAAO;AAAA;AAAA,KAJlDG,GAAG;AAuHT;AAEH,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}